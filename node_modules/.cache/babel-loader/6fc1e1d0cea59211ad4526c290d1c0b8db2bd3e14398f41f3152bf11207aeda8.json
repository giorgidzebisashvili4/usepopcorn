{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport function useLocalStorageState(initialValue, key) {\n  _s();\n  const [value, setValue] = useState(function () {\n    const storedValue = JSON.parse(localStorage.getItem(key)) || [];\n    return storedValue;\n  });\n  // Store the watched movies in local storage whenever the watched state changes\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n  return [value, setValue];\n}\n_s(useLocalStorageState, \"RmEvUBoCTGLWwglrUBe5BSgORXk=\");","map":{"version":3,"names":["useState","useEffect","useLocalStorageState","initialValue","key","_s","value","setValue","storedValue","JSON","parse","localStorage","getItem","setItem","stringify"],"sources":["/home/giorgi/repos/usepopcorn/src/useLocalStorigeState.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport function useLocalStorageState(initialValue, key) {\n  const [value, setValue] = useState(function () {\n    const storedValue = JSON.parse(localStorage.getItem(key)) || [];\n    return storedValue;\n  });\n  // Store the watched movies in local storage whenever the watched state changes\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAASC,oBAAoBA,CAACC,YAAY,EAAEC,GAAG,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,YAAY;IAC7C,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC,CAAC,IAAI,EAAE;IAC/D,OAAOI,WAAW;EACpB,CAAC,CAAC;EACF;EACAP,SAAS,CAAC,MAAM;IACdU,YAAY,CAACE,OAAO,CAACT,GAAG,EAAEK,IAAI,CAACK,SAAS,CAACR,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,CAACA,KAAK,EAAEF,GAAG,CAAC,CAAC;EAEhB,OAAO,CAACE,KAAK,EAAEC,QAAQ,CAAC;AAC1B;AAACF,EAAA,CAXeH,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}